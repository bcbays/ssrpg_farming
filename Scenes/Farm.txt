var _Styles = import Games/Farming/Assets/Styles
var _Sprites = import Games/Farming/Assets/Sprites
var _UIFactory = import Games/Farming/UI/UIFactory
var _GameState = import Games/Farming/Enums/GameState
var _Game = import Games/Farming/Game

// Components
var _backgroundPanel = null

var panLeftButton = null
var panLeftCallback = null
var panRightButton = null
var panRightCallback = null

func _SetStateFn(args)
  _Game.SetState(args[0])

func Init()
  this._backgroundPanel = _UIFactory.MakePanel(0, 0, screen.w, screen.h, null, _Styles.Borderless)
  this._backgroundPanel.visible = false

  this.panLeftCallback = _UIFactory.MakeCallback(_SetStateFn, [_GameState.Farm])
  this.panLeftButton = _UIFactory.MakeButton(1, screen.h/2, 3, 3, "◀", null, this.panLeftCallback.Callback)
  this._backgroundPanel.Add(panLeftButton)

  this.panRightCallback = _UIFactory.MakeCallback(_SetStateFn, [_GameState.MainHub])
  this.panRightButton = _UIFactory.MakeButton(screen.w - 4, screen.h/2, 3, 3, "▶", null, this.panRightCallback.Callback)
  this._backgroundPanel.Add(panRightButton)

func Show()
  this._backgroundPanel.visible = true

func Hide()
  this._backgroundPanel.visible = false

func Update()
  return

func DrawIso(ox, oy, tx, ty, color, sprite)
  var x = ox + 7*(tx - ty)
  var y = oy - 2*(tx + ty)
  >`@x@,@y@,@color@,@sprite@ 

func Draw()
  // X+ = +9, +2
  // Y+ = -9, +2

  var ox = screen.w / 2 - 7
  var oy = screen.h / 2 + 8

  for ty = 0..4
    for tx = 0..4
      DrawIso(ox, oy, tx, ty, "#808080", _Sprites.Farm.tile)

  DrawIso(ox, oy - 2, 1, 2, "#FFFFFF", _Sprites.Farm.test_plant)
  DrawIso(ox, oy - 2, 3, 3, "#FFFFFF", _Sprites.Farm.test_plant)
  DrawIso(ox, oy - 2, 0, 4, "#FFFFFF", _Sprites.Farm.test_plant)